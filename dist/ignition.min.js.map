{"version":3,"sources":["ignition.min.js","ignition.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","IgnitionError","message","this","name","generateTypeValidation","type","subject","throwError","subjectType","isNull","isArray","isValid","Object","toString","call","isRegistered","collection","item","superset","spaces","concat","isString","indexOf","isFunction","replace","i","length","generateRegistration","registry","validation","push","registerMulti","registration","subjects","execFunctionQueue","queue","window","buildBundlePath","baseDir","ext","substr","Ignition","options","generateArrayPropCloner","propName","Array","slice","registerSrcs","srcs","ig","_registerMulti","registerSrc","registerFns","fns","registerFn","registerByName","_parseSubject","parseSubject","parsedSubject","isOptional","namedSrcs","_parseSubject2","getAllSrcs","result","t","tierCount","tiers","generateTierRegistration","optional","arguments","undefined","optionalSrcs","hasAliases","aliases","defaults","bundles","test","dir","loadCss","bootstrap","modules","angular","document","extend","target","from","isObject","j","hasOwnProperty","sources","names","getNames","bundleModules","isBoolean","registerOne","registerMany","register","bundleName","getSrcs","bundleSrcs","isCss","_buildBundlePath","a","isUndefined","getOptionalSrcs","getFns","ready","Error","fn","_isString","_isFunction","_isObject","_isArray","_isRegistered","_generateRegistration","_execFunctionQueue","_loadTier","chain","optionalScript","script","wait","_injectCss","src","links","link","head","getElementsByTagName","getAttribute","createElement","setAttribute","appendChild","load","$LAB","c","cssSrcs"],"mappings":"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","file":"ignition.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * IgnitionJS v4.1.1 <https://github.com/carsdotcom>\n * @license Apache 2.0\n * @copyright 2014 Cars.com <http://www.cars.com/>\n * @author Mac Heller-Ogden\n * @summary A fast and flexible, module loader/bootstrapper for AngularJS.\n * @requires LABjs 2.0.3 <http://labjs.com/>.\n */\n{\n    var IgnitionError = function IgnitionError(message) {\n        this.name = 'IgnitionError';\n        this.message = message;\n    };\n\n    var generateTypeValidation = function generateTypeValidation(type) {\n        return function (subject, throwError) {\n            var subjectType = typeof subject === 'undefined' ? 'undefined' : _typeof(subject),\n                isNull = false,\n                isArray = false,\n                isValid = true;\n            if (subjectType === 'object' && !(isNull = subject === null)) {\n                isArray = Object.prototype.toString.call(subject) === '[object Array]';\n            }\n            if (type === 'array') {\n                isValid = isArray;\n            } else if (type === 'object' && (isArray || isNull)) {\n                isValid = false;\n            } else if (subjectType !== type) {\n                isValid = false;\n            }\n            if (!isValid && throwError) throw new IgnitionError('Expected `' + type + '` and instead received `' + subjectType + '`');\n            return isValid;\n        };\n    };\n\n    var isRegistered = function isRegistered(collection, item, superset) {\n        var spaces;\n        superset = isArray(superset) ? superset : [];\n        isArray(collection, true);\n        collection = collection.concat(superset);\n        if (isString(item)) {\n            return collection.indexOf(item) >= 0;\n        } else if (isFunction(item)) {\n            spaces = / +?/g;\n            item = item.toString().replace(spaces, '');\n            for (var i = 0; i < collection.length; i++) {\n                if (isFunction(collection[i]) && collection[i].toString().replace(spaces, '') === item) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n    var generateRegistration = function generateRegistration(registry, validation) {\n        return function (subject) {\n            if (!validation(subject)) throw new IgnitionError('Invalid subject');\n            if (!isRegistered(registry, subject)) registry.push(subject);\n        };\n    };\n\n    var registerMulti = function registerMulti(registration, subjects) {\n        isArray(subjects, true);\n        for (var i = 0; i < subjects.length; i++) {\n            registration(subjects[i]);\n        }\n    };\n\n    var execFunctionQueue = function execFunctionQueue(queue) {\n        for (var i = 0; i < queue.length; i++) {\n            queue[i].call(window);\n        }\n    };\n\n    var buildBundlePath = function buildBundlePath(name, baseDir, ext) {\n        if (baseDir.substr(-1) !== '/') {\n            baseDir += '/';\n        }\n        return baseDir + name + '.' + ext;\n    };\n\n    var Ignition = function Ignition(options) {\n        var ig = this,\n            hasAliases,\n            aliases,\n            defaults = {\n            bundles: {\n                validation: function validation(subject) {\n                    return isString(subject) && /^[A-Za-z]+\\w*$/.test(subject);\n                },\n                dir: '/app/bundles/',\n                loadCss: false\n            },\n            bootstrap: function bootstrap(modules) {\n                angular.bootstrap(document, modules);\n            }\n        };\n\n        options = function extend(target) {\n            var from;\n            for (var i = 1; i < arguments.length; ++i) {\n                from = arguments[i];\n                if (!isObject(from)) continue;\n                for (var j in from) {\n                    if (from.hasOwnProperty(j)) {\n                        target[j] = isObject(from[j]) ? extend({}, target[j], from[j]) : from[j];\n                    }\n                }\n            }\n            return target;\n        }({}, defaults, options);\n\n        function generateArrayPropCloner(propName) {\n            return function () {\n                return Array.prototype.slice.call(this[propName], 0);\n            };\n        }\n\n        function registerSrcs(srcs) {\n            ig._registerMulti(this.registerSrc, srcs);\n        }\n\n        function registerFns(fns) {\n            ig._registerMulti(this.registerFn, fns);\n        }\n\n        function registerByName(subject) {\n            if (isString(subject)) {\n                var _parseSubject = parseSubject(subject),\n                    parsedSubject = _parseSubject.parsedSubject,\n                    isOptional = _parseSubject.isOptional;\n\n                this.registerSrc(ig.namedSrcs[parsedSubject], isOptional);\n            } else if (isArray(subject)) {\n                for (var i = 0; i < subject.length; i++) {\n                    var _parseSubject2 = parseSubject(subject[i]),\n                        _parsedSubject = _parseSubject2.parsedSubject,\n                        _isOptional = _parseSubject2.isOptional;\n\n                    this.registerSrc(ig.namedSrcs[_parsedSubject], _isOptional);\n                }\n            } else {\n                throw new IgnitionError('Invalid subject');\n            }\n        }\n\n        function parseSubject(subject) {\n            var parsedSubject = subject.indexOf('?') === subject.length - 1 ? subject.slice(0, subject.length - 1) : subject;\n\n            return {\n                parsedSubject: parsedSubject,\n                isOptional: subject !== parsedSubject\n            };\n        }\n\n        function getAllSrcs() {\n            var result = [];\n            for (var t = 0; t < ig.tierCount; t++) {\n                result = result.concat(ig.tiers[t].srcs);\n            }\n            return result;\n        }\n\n        function generateTierRegistration(t) {\n            return function (subject) {\n                var optional = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n                if (!ig.tiers[t].validation(subject)) throw new IgnitionError('Invalid subject');\n                if (!isRegistered(ig.tiers[t].srcs, subject, getAllSrcs())) {\n                    if (optional) {\n                        ig.tiers[t].optionalSrcs.push(subject);\n                    } else {\n                        ig.tiers[t].srcs.push(subject);\n                    }\n                }\n            };\n        }\n\n        ig.namedSrcs = isObject(options.sources) ? options.sources : {};\n\n        ig.bundles = {};\n        ig.bundles.names = [];\n        ig.bundles.getNames = generateArrayPropCloner('names');\n        ig.bundles.modules = isObject(options.bundles.modules) ? options.bundles.modules : {};\n\n        ig.bundleModules = {};\n        ig.bundleModules.names = [];\n        ig.bundleModules.getNames = generateArrayPropCloner('names');\n\n        ig.bundles.validation = options.bundles.validation;\n        isFunction(ig.bundles.validation, true);\n\n        ig.bundles.dir = options.bundles.dir;\n        isString(ig.bundles.dir, true);\n\n        ig.bundles.loadCss = options.bundles.loadCss;\n        isBoolean(ig.bundles.loadCss, true);\n\n        ig.bundles.registerOne = generateRegistration(ig.bundles.names, ig.bundles.validation);\n\n        ig.bundles.registerMany = function (bundles) {\n            ig._registerMulti(this.registerOne, bundles);\n        };\n\n        ig.bundles.register = function (bundleName) {\n            var bundleModules = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ig.bundles.modules[bundleName] || [bundleName];\n\n            isString(bundleName, true);\n            ig.bundles.registerOne(bundleName);\n            ig.bundleModules.registerMany(bundleModules);\n        };\n\n        ig.bundles.getSrcs = function (type) {\n            var bundles = this.getNames(),\n                bundleSrcs = [],\n                isCss = type === 'css' ? true : false,\n                ext = isCss ? 'css' : 'js';\n            for (var i = 0; i < bundles.length; i++) {\n                bundleSrcs.push(ig._buildBundlePath(bundles[i], this.dir, ext));\n            }\n            return bundleSrcs;\n        };\n\n        ig.bundleModules.registerOne = generateRegistration(ig.bundleModules.names, function () {\n            return true;\n        });\n\n        ig.bundleModules.registerMany = function (bundleModules) {\n            ig._registerMulti(this.registerOne, bundleModules);\n        };\n\n        ig.bootstrap = options.bootstrap;\n        isFunction(ig.bootstrap, true);\n\n        ig.tiers = [];\n        if (isArray(options.tiers)) {\n            ig.tierCount = options.tiers.length;\n            options.tiers = options.tiers;\n        } else {\n            ig.tierCount = 2;\n            options.tiers = [];\n        }\n        for (var t = 0; t < ig.tierCount; t++) {\n            ig.tiers[t] = {};\n            hasAliases = options.tiers[t] && isArray(options.tiers[t].aliases);\n            ig.tiers[t].aliases = aliases = hasAliases ? options.tiers[t].aliases : [];\n            for (var a = 0; a < aliases.length; a++) {\n                if (isUndefined(ig[aliases[a]])) {\n                    ig[aliases[a]] = ig.tiers[t];\n                } else {\n                    throw new IgnitionError('Illegal alias name');\n                }\n            }\n\n            ig.tiers[t].validation = options.tiers[t] && isFunction(options.tiers[t].validation) ? options.tiers[t].validation : isString;\n            ig.tiers[t].fns = [];\n            ig.tiers[t].srcs = [];\n            ig.tiers[t].optionalSrcs = [];\n            ig.tiers[t].getSrcs = generateArrayPropCloner('srcs');\n            ig.tiers[t].getOptionalSrcs = generateArrayPropCloner('optionalSrcs');\n            ig.tiers[t].getFns = generateArrayPropCloner('fns');\n            ig.tiers[t].registerSrc = generateTierRegistration(t);\n            ig.tiers[t].registerFn = generateRegistration(ig.tiers[t].fns, isFunction);\n            ig.tiers[t].registerSrcs = registerSrcs;\n            ig.tiers[t].registerFns = registerFns;\n            ig.tiers[t].register = registerByName;\n        }\n\n        ig.ready = {\n            fns: []\n        };\n        ig.ready.getFns = generateArrayPropCloner('fns');\n        ig.ready.registerFn = generateRegistration(ig.ready.fns, isFunction);\n        ig.ready.registerFns = function (fns) {\n            ig._registerMulti(this.registerFn, fns);\n        };\n    };\n\n    var isString = void 0,\n        isFunction = void 0,\n        isObject = void 0,\n        isArray = void 0,\n        isUndefined = void 0,\n        isBoolean = void 0;\n\n    IgnitionError.prototype = Error.prototype;\n\n    isString = generateTypeValidation('string');\n    isFunction = generateTypeValidation('function');\n    isObject = generateTypeValidation('object');\n    isArray = generateTypeValidation('array');\n    isUndefined = generateTypeValidation('undefined');\n    isBoolean = generateTypeValidation('boolean');\n\n    Ignition.fn = Ignition.prototype;\n\n    Ignition.fn._isString = isString;\n    Ignition.fn._isFunction = isFunction;\n    Ignition.fn._isObject = isObject;\n    Ignition.fn._isArray = isArray;\n    Ignition.fn._isRegistered = isRegistered;\n    Ignition.fn._generateRegistration = generateRegistration;\n    Ignition.fn._registerMulti = registerMulti;\n    Ignition.fn._execFunctionQueue = execFunctionQueue;\n    Ignition.fn._buildBundlePath = buildBundlePath;\n\n    Ignition.fn._loadTier = function (t, chain) {\n        var ig = this;\n        return chain.optionalScript(ig.tiers[t].getOptionalSrcs()).script(ig.tiers[t].getSrcs()).wait(function () {\n            ig._execFunctionQueue(ig.tiers[t].getFns());\n        });\n    };\n\n    Ignition.fn._injectCss = function (src) {\n        var head = document.getElementsByTagName('head')[0],\n            links,\n            link;\n        links = head.getElementsByTagName('link');\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].getAttribute('href') === src) return;\n        }\n        link = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.setAttribute('href', src);\n        head.appendChild(link);\n    };\n\n    Ignition.fn.load = function () {\n        var ig = this,\n            chain;\n        if (!$LAB) throw new IgnitionError('$LAB not found.');\n        chain = $LAB;\n        for (var t = 0; t < ig.tierCount; t++) {\n            chain = ig._loadTier(t, chain);\n        }if (ig.bundles.loadCss) {\n            for (var c = 0, cssSrcs = ig.bundles.getSrcs('css'); c < cssSrcs.length; c++) {\n                ig._injectCss(cssSrcs[c]);\n            }\n        }\n        chain.script(ig.bundles.getSrcs()).wait(function () {\n            ig.bootstrap(ig.bundleModules.getNames());\n            ig._execFunctionQueue(ig.ready.getFns());\n        });\n    };\n\n    window.Ignition = Ignition;\n}","/*!\n * IgnitionJS v4.1.1 <https://github.com/carsdotcom>\n * @license Apache 2.0\n * @copyright 2014 Cars.com <http://www.cars.com/>\n * @author Mac Heller-Ogden\n * @summary A fast and flexible, module loader/bootstrapper for AngularJS.\n * @requires LABjs 2.0.3 <http://labjs.com/>.\n */\n{\n    let isString,\n        isFunction,\n        isObject,\n        isArray,\n        isUndefined,\n        isBoolean;\n\n    function IgnitionError(message) {\n        this.name = 'IgnitionError';\n        this.message = message;\n    }\n    IgnitionError.prototype = Error.prototype;\n\n   function generateTypeValidation(type) {\n        return (subject, throwError) => {\n            var subjectType = typeof subject,\n                isNull = false,\n                isArray = false,\n                isValid = true;\n            if (subjectType === 'object' && !(isNull = subject === null)) {\n                isArray = Object.prototype.toString.call(subject) === '[object Array]';\n            }\n            if (type === 'array') {\n                isValid = isArray;\n            } else if (type === 'object' && (isArray || isNull)) {\n                isValid = false;\n            } else if (subjectType !== type) {\n                isValid = false;\n            }\n            if (!isValid && throwError) throw new IgnitionError('Expected `' + type + '` and instead received `' + subjectType + '`');\n            return isValid;\n        };\n    }\n\n    isString = generateTypeValidation('string');\n    isFunction = generateTypeValidation('function');\n    isObject = generateTypeValidation('object');\n    isArray = generateTypeValidation('array');\n    isUndefined = generateTypeValidation('undefined');\n    isBoolean = generateTypeValidation('boolean');\n\n    function isRegistered(collection, item, superset) {\n        var spaces;\n        superset = isArray(superset) ? superset : [];\n        isArray(collection, true);\n        collection = collection.concat(superset);\n        if (isString(item)) {\n            return collection.indexOf(item) >= 0;\n        } else if (isFunction(item)) {\n            spaces = / +?/g;\n            item = item.toString().replace(spaces, '');\n            for (let i = 0; i < collection.length; i++) {\n                if (isFunction(collection[i]) && collection[i].toString().replace(spaces, '') === item) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function generateRegistration(registry, validation) {\n        return (subject) => {\n            if (!validation(subject)) throw new IgnitionError('Invalid subject');\n            if (!isRegistered(registry, subject)) registry.push(subject);\n        };\n    }\n\n    function registerMulti(registration, subjects) {\n        isArray(subjects, true);\n        for (let i = 0; i < subjects.length; i++) {\n            registration(subjects[i]);\n        }\n    }\n\n    function execFunctionQueue(queue) {\n        for (let i = 0; i < queue.length; i++) {\n            queue[i].call(window);\n        }\n    }\n\n    function buildBundlePath(name, baseDir, ext) {\n        if (baseDir.substr(-1) !== '/') {\n            baseDir += '/';\n        }\n        return baseDir + name + '.' + ext;\n    }\n\n    function Ignition(options) {\n        var ig = this,\n            hasAliases,\n            aliases,\n            defaults = {\n                bundles: {\n                    validation: function (subject) { return (isString(subject) && /^[A-Za-z]+\\w*$/.test(subject)); },\n                    dir: '/app/bundles/',\n                    loadCss: false\n                },\n                bootstrap: function (modules) { angular.bootstrap(document, modules); }\n            };\n\n        options = (function extend(target) {\n            var from;\n            for (let i = 1; i < arguments.length; ++i) {\n                from = arguments[i];\n                if (!isObject(from)) continue;\n                for (let j in from) {\n                    if (from.hasOwnProperty(j)) {\n                        target[j] = isObject(from[j]) ? extend({}, target[j], from[j]) : from[j];\n                    }\n                }\n            }\n            return target;\n        }({}, defaults, options));\n\n\n        function generateArrayPropCloner(propName) {\n            return function () {\n                return Array.prototype.slice.call(this[propName], 0);\n            };\n        }\n\n        function registerSrcs(srcs) {\n            ig._registerMulti(this.registerSrc, srcs);\n        }\n\n        function registerFns(fns) {\n            ig._registerMulti(this.registerFn, fns);\n        }\n\n        function registerByName(subject) {\n            if (isString(subject)) {\n                let { parsedSubject, isOptional } = parseSubject(subject);\n                this.registerSrc(ig.namedSrcs[parsedSubject], isOptional);\n            } else if (isArray(subject)) {\n                for (let i = 0; i < subject.length; i++) {\n                    let { parsedSubject, isOptional } = parseSubject(subject[i]);\n                    this.registerSrc(ig.namedSrcs[parsedSubject], isOptional);\n                }\n            } else {\n                throw new IgnitionError('Invalid subject');\n            }\n        }\n\n        function parseSubject (subject) {\n            let parsedSubject = (subject.indexOf('?') === subject.length - 1) ?\n                    subject.slice(0, subject.length - 1) :\n                    subject;\n\n            return {\n                parsedSubject,\n                isOptional: subject !== parsedSubject\n            };\n        }\n\n        function getAllSrcs() {\n            var result = [];\n            for (let t = 0; t < ig.tierCount; t++) {\n                result = result.concat(ig.tiers[t].srcs);\n            }\n            return result;\n        }\n\n        function generateTierRegistration(t) {\n            return function (subject, optional=false) {\n                if (!ig.tiers[t].validation(subject)) throw new IgnitionError('Invalid subject');\n                if (!isRegistered(ig.tiers[t].srcs, subject, getAllSrcs())) {\n                    if (optional) {\n                        ig.tiers[t].optionalSrcs.push(subject);\n                    } else {\n                        ig.tiers[t].srcs.push(subject);\n                    }\n                }\n            };\n        }\n\n        ig.namedSrcs = isObject(options.sources) ? options.sources : {};\n\n        ig.bundles = {};\n        ig.bundles.names = [];\n        ig.bundles.getNames = generateArrayPropCloner('names');\n        ig.bundles.modules = isObject(options.bundles.modules) ? options.bundles.modules : {};\n\n        ig.bundleModules = {};\n        ig.bundleModules.names = [];\n        ig.bundleModules.getNames = generateArrayPropCloner('names');\n\n        ig.bundles.validation = options.bundles.validation;\n        isFunction(ig.bundles.validation, true);\n\n        ig.bundles.dir = options.bundles.dir;\n        isString(ig.bundles.dir, true);\n\n        ig.bundles.loadCss = options.bundles.loadCss;\n        isBoolean(ig.bundles.loadCss, true);\n\n        ig.bundles.registerOne = generateRegistration(ig.bundles.names, ig.bundles.validation);\n\n        ig.bundles.registerMany = function (bundles) {\n            ig._registerMulti(this.registerOne, bundles);\n        };\n\n        ig.bundles.register = function (bundleName, bundleModules = ig.bundles.modules[bundleName] || [ bundleName ]) {\n            isString(bundleName, true);\n            ig.bundles.registerOne(bundleName);\n            ig.bundleModules.registerMany(bundleModules);\n        };\n\n        ig.bundles.getSrcs = function (type) {\n            var bundles = this.getNames(),\n                bundleSrcs = [],\n                isCss = (type === 'css') ? true : false,\n                ext = (isCss) ? 'css' : 'js';\n            for (let i = 0; i < bundles.length; i++) {\n                bundleSrcs.push(ig._buildBundlePath(bundles[i], this.dir, ext));\n            }\n            return bundleSrcs;\n        };\n\n        ig.bundleModules.registerOne = generateRegistration(ig.bundleModules.names, () => { return true; });\n\n        ig.bundleModules.registerMany = function (bundleModules) {\n            ig._registerMulti(this.registerOne, bundleModules);\n        };\n\n        ig.bootstrap = options.bootstrap;\n        isFunction(ig.bootstrap, true);\n\n        ig.tiers = [];\n        if (isArray(options.tiers)) {\n            ig.tierCount = options.tiers.length;\n            options.tiers = options.tiers;\n        } else {\n            ig.tierCount = 2;\n            options.tiers = [];\n        }\n        for (let t = 0; t < ig.tierCount; t++) {\n            ig.tiers[t] = {};\n            hasAliases = (options.tiers[t] && isArray(options.tiers[t].aliases));\n            ig.tiers[t].aliases = aliases = hasAliases ? options.tiers[t].aliases : [];\n            for (let a = 0; a < aliases.length; a++) {\n                if (isUndefined(ig[aliases[a]])) {\n                    ig[aliases[a]] = ig.tiers[t];\n                } else {\n                    throw new IgnitionError('Illegal alias name');\n                }\n            }\n\n            ig.tiers[t].validation = (options.tiers[t] && isFunction(options.tiers[t].validation)) ? options.tiers[t].validation : isString;\n            ig.tiers[t].fns = [];\n            ig.tiers[t].srcs = [];\n            ig.tiers[t].optionalSrcs = [];\n            ig.tiers[t].getSrcs = generateArrayPropCloner('srcs');\n            ig.tiers[t].getOptionalSrcs = generateArrayPropCloner('optionalSrcs');\n            ig.tiers[t].getFns = generateArrayPropCloner('fns');\n            ig.tiers[t].registerSrc = generateTierRegistration(t);\n            ig.tiers[t].registerFn = generateRegistration(ig.tiers[t].fns, isFunction);\n            ig.tiers[t].registerSrcs = registerSrcs;\n            ig.tiers[t].registerFns = registerFns;\n            ig.tiers[t].register = registerByName;\n        }\n\n        ig.ready = {\n            fns: []\n        };\n        ig.ready.getFns = generateArrayPropCloner('fns');\n        ig.ready.registerFn = generateRegistration(ig.ready.fns, isFunction);\n        ig.ready.registerFns = function (fns) {\n            ig._registerMulti(this.registerFn, fns);\n        };\n\n    }\n\n    Ignition.fn = Ignition.prototype;\n\n    Ignition.fn._isString = isString;\n    Ignition.fn._isFunction = isFunction;\n    Ignition.fn._isObject = isObject;\n    Ignition.fn._isArray = isArray;\n    Ignition.fn._isRegistered = isRegistered;\n    Ignition.fn._generateRegistration = generateRegistration;\n    Ignition.fn._registerMulti = registerMulti;\n    Ignition.fn._execFunctionQueue = execFunctionQueue;\n    Ignition.fn._buildBundlePath = buildBundlePath;\n\n    Ignition.fn._loadTier = function (t, chain) {\n        var ig = this;\n        return chain.optionalScript(ig.tiers[t].getOptionalSrcs())\n            .script(ig.tiers[t].getSrcs()).wait(() => {\n                ig._execFunctionQueue(ig.tiers[t].getFns());\n            });\n    };\n\n    Ignition.fn._injectCss = function (src) {\n        var head = document.getElementsByTagName('head')[0],\n            links,\n            link;\n        links = head.getElementsByTagName('link');\n        for (let i = 0; i < links.length; i++) {\n            if (links[i].getAttribute('href') === src) return;\n        }\n        link = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.setAttribute('href', src);\n        head.appendChild(link);\n    };\n\n    Ignition.fn.load = function () {\n        var ig = this,\n            chain;\n        if (!$LAB) throw new IgnitionError('$LAB not found.');\n        chain = $LAB;\n        for (let t = 0; t < ig.tierCount; t++) chain = ig._loadTier(t, chain);\n        if (ig.bundles.loadCss) {\n            for (let c = 0, cssSrcs = ig.bundles.getSrcs('css'); c < cssSrcs.length; c++) ig._injectCss(cssSrcs[c]);\n        }\n        chain.script(ig.bundles.getSrcs()).wait(() => {\n            ig.bootstrap(ig.bundleModules.getNames());\n            ig._execFunctionQueue(ig.ready.getFns());\n        });\n    };\n\n    window.Ignition = Ignition;\n}\n"]}